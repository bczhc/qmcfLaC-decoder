#!/bin/groovy

static def printStream(InputStream stdout, PrintStream writer) {
    def b = new byte[1]
    while (stdout.read(b) != -1) {
        writer.write([b[0] as char] as char[])
    }
}

static def runShell(String[] cmd, String[] envp, File dir) {
    def process = cmd.toList().execute(envp, dir)
    def stdout = process.inputStream
    def stderr = process.errorStream
    def threads = [
            new Thread({
                printStream(stdout, System.out)
            }),
            new Thread({
                printStream(stderr, System.err)
            })
    ]

    threads.forEach {
        it.start()
    }
    threads.forEach {
        it.join()
    }
    def status = process.waitFor()
    if (status != 0) {
        throw new Exception("Failed to run ${cmd}: non-zero exit value")
    }
}

static def runShell(String cmd) {
    runShell([cmd] as String[])
}

static def runShell(String[] cmd) {
    runShell(cmd, null, null)
}

static def runShells(List<List<String>> cmds) {
    cmds.forEach { cmd ->
        runShell(cmd as String[])
    }
}

def target = "aarch64-linux-android"
def targetList = "rustup target list".execute().text.split("\\n").toList()
def installed = false
targetList.forEach {
    if (it.matches("^$target( \\(installed\\))?\$")) {
        if (it.matches(".*installed\\)\$")) {
            installed = true
        }
    }
}
if (!installed) {
    runShell(["rustup", "target", "add", target] as String[])
}

