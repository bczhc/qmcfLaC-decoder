/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class pers_zhc_tools_jni_JNI_Transfer */

#ifndef _Included_pers_zhc_tools_jni_JNI_Transfer
#define _Included_pers_zhc_tools_jni_JNI_Transfer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     pers_zhc_tools_jni_JNI_Transfer
 * Method:    send
 * Signature: ([BSLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_pers_zhc_tools_jni_JNI_00024Transfer_send
  (JNIEnv *, jclass, jbyteArray, jshort, jstring);

/*
 * Class:     pers_zhc_tools_jni_JNI_Transfer
 * Method:    startAsyncReceive
 * Signature: (SLpers/zhc/tools/jni/JNI/Transfer/Callback;)V
 */
JNIEXPORT void JNICALL Java_pers_zhc_tools_jni_JNI_00024Transfer_startAsyncReceive
  (JNIEnv *, jclass, jshort, jobject);

/*
 * Class:     pers_zhc_tools_jni_JNI_Transfer
 * Method:    getLocalIpv4
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_pers_zhc_tools_jni_JNI_00024Transfer_getLocalIpv4
  (JNIEnv *, jclass);

/*
 * Class:     pers_zhc_tools_jni_JNI_Transfer
 * Method:    getLocalIpInfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_pers_zhc_tools_jni_JNI_00024Transfer_getLocalIpInfo
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
