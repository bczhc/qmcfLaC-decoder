import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

static ran_sc(int min, int max) {
    double ran_sc_db = Math.round(Math.random() * (max - min)) + min
    return (int) ran_sc_db
}

static unicodeHexToString(int[] code) {
    StringBuilder sb = StringBuilder.newInstance()
    for (c in code) {
        if (c > 0xFFFF && c < 0x110000) {
            sb.append((Math.floor((c - 0x10000) / 0x400) + 0xD800) as char)
                    .append(((c - 0x10000) % 0x400 + 0xDC00) as char)
        } else
            sb.append(c as char)
    }
    return sb.toString()
}


static gVersion() {
    def date = Date.newInstance()
    def dateString = new SimpleDateFormat("yyyyMMdd").format(date)
    def time = new SimpleDateFormat("HHmmss").format(date)
    def which = 2
    def verString = "6.1.0.1"
    def emoji = ranEmoji()
    return [
            Integer.parseInt(dateString + which),
            "${verString}_${dateString}${time}_$emoji"
    ]
}

static ranEmoji() {
    def emojiRange = [[0x1F300, 0x1F5FF],
                      [0x1F900, 0x1F9FF],
                      [0x1F600, 0x1F64F],
                      [0x1F680, 0x1F6FF]]
    def hexArrLen = ran_sc(2, 4)
    def hex = []
    for (int i = 0; i < hexArrLen; i++) {
        def index = ran_sc(0, emojiRange.size() - 1)
        hex[i] = ran_sc(emojiRange[index][0], emojiRange[index][1])
    }
    return unicodeHexToString(hex as int[])
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "pers.zhc.tools"
        minSdkVersion 14
        targetSdkVersion 29
        def verInfo = gVersion()
        versionCode(verInfo[0] as int)
        versionName(verInfo[1] as String)
    }
    buildTypes {
        release {
            //noinspection GroovyAssignabilityCheck
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
        return true
    }
    sourceSets.main {
        jni.srcDirs = ['src/jni']
        jniLibs.srcDirs = ['src/libs']
    }
    return true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'src/main/jar_libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'org.mariuszgromada.math:MathParser.org-mXparser:4.3.3'
//    implementation 'com.github.bumptech.glide:glide:4.4.0'
}
